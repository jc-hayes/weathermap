{"ast":null,"code":"import _slicedToArray from \"/Users/jameshayes/Desktop/weathermap-api/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jameshayes/Desktop/weathermap-api/src/App.js\";\n//eslint-disable-next-line\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Weather from './Weather.js';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        weather = _useState2[0],\n        setWeather = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        weatherSys = _useState4[0],\n        setWeatherSys = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        weatherInfo = _useState6[0],\n        setWeatherInfo = _useState6[1];\n\n  const _useState7 = useState({}),\n        _useState8 = _slicedToArray(_useState7, 2),\n        weatherMain = _useState8[0],\n        setWeatherMain = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        search = _useState10[0],\n        setSearch = _useState10[1];\n\n  const _useState11 = useState('seattle,us'),\n        _useState12 = _slicedToArray(_useState11, 2),\n        query = _useState12[0],\n        setQuery = _useState12[1];\n\n  useEffect(() => {\n    getWeather();\n  }, [query]);\n  const APP_ID = '4d5ece97315492a895ae0fad7328bf6a';\n\n  const getWeather = async () => {\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${query}&appid=${APP_ID}`);\n    const data = await response.json();\n    setWeather(data);\n    setWeatherSys(data.sys);\n    setWeatherInfo(data.weather[0]);\n    setWeatherMain(data.main);\n    console.log(data);\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: getSearch,\n    className: \"search-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"search-bar\",\n    type: \"text\",\n    placeholder: \"Enter city, country code (eg: Seattle,US or Seattle)\",\n    value: search,\n    onChange: updateSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"search-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Search\")), React.createElement(\"div\", {\n    className: \"weather-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Weather, {\n    key: weather.id,\n    city: weather.name,\n    country: weatherSys.country,\n    description: weatherInfo.description,\n    temp: weatherMain.temp,\n    humidity: weatherMain.humidity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/jameshayes/Desktop/weathermap-api/src/App.js"],"names":["React","useState","useEffect","Weather","App","weather","setWeather","weatherSys","setWeatherSys","weatherInfo","setWeatherInfo","weatherMain","setWeatherMain","search","setSearch","query","setQuery","getWeather","APP_ID","response","fetch","data","json","sys","main","console","log","updateSearch","e","target","value","getSearch","preventDefault","id","name","country","description","temp","humidity"],"mappings":"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","sourcesContent":["//eslint-disable-next-line\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Weather from './Weather.js';\n\nconst App = () => {\n  \n  const [weather, setWeather] = useState([]);\n  const [weatherSys, setWeatherSys] = useState([]);\n  const [weatherInfo, setWeatherInfo] = useState({});\n  const [weatherMain, setWeatherMain] = useState({});\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('seattle,us');\n\n  useEffect(() => {\n    getWeather();\n  }, [query]);\n\n  const APP_ID = '4d5ece97315492a895ae0fad7328bf6a';\n\n  const getWeather = async () => {\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${query}&appid=${APP_ID}`);\n    const data = await response.json();\n    setWeather(data);\n    setWeatherSys(data.sys);\n    setWeatherInfo(data.weather[0]);\n    setWeatherMain(data.main);\n    console.log(data);\n  };\n\n  const updateSearch = e => {\n      setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  };\n\n    return(\n      <div className=\"App\">\n        <form onSubmit={getSearch} className=\"search-form\">\n          <input \n            className=\"search-bar\"\n            type=\"text\"\n            placeholder=\"Enter city, country code (eg: Seattle,US or Seattle)\"\n            value={search}\n            onChange={updateSearch}\n          />\n          <button type=\"submit\" className=\"search-button\">Search</button>\n        </form>\n        <div className=\"weather-data\">\n          <Weather\n            key={weather.id}\n            city={weather.name}\n            country={weatherSys.country}\n            description={weatherInfo.description}\n            temp={weatherMain.temp}\n            humidity={weatherMain.humidity}\n          />\n        </div>\n      </div>\n    );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}